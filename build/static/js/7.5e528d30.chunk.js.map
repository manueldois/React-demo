{"version":3,"sources":["components/Counter/Counter.js","services/counting.service.js","routes/DataFlow/components/ObservableCounter.js","routes/DataFlow/components/ObservableListener.js","routes/DataFlow/components/ReduxCounter.js","routes/DataFlow/components/ReduxListener.js","routes/DataFlow/DataFlow.jsx","reducers/counter.reducer.js"],"names":["Counter","react_default","a","createElement","className","name","onClick","this","props","handleInc","count","handleDec","React","Component","subject","BehaviorSubject","number","countingService","message","console","log","next","value","asObservable","ObservableCounter","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_this2","subscribe","data","setState","components_Counter_Counter","ObservableListener","ReduxCounter","connect","dispatch","type","ReduxListener","store","createStore","arguments","length","undefined","window","__REDUX_DEVTOOLS_EXTENSION__","DataFlow","es","ObservableCounter_ObservableCounter","ObservableListener_ObservableListener","components_ReduxCounter","components_ReduxListener"],"mappings":"yMAegBA,kMAVR,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,UAAQE,KAAK,MAAMC,QAASC,KAAKC,MAAMC,WAAvC,KACAR,EAAAC,EAAAC,cAAA,UAAKI,KAAKC,MAAME,OAChBT,EAAAC,EAAAC,cAAA,UAAQE,KAAK,MAAMC,QAASC,KAAKC,MAAMG,WAAvC,aANMC,IAAMC,YCDtBC,EAAU,WAAIC,GAAgB,CAAEC,OAAQ,KAEjCC,EACI,SAAAC,GACTC,QAAQC,IAAIF,GACI,QAAZA,GACAJ,EAAQO,KAAK,CAAEL,OAAQF,EAAQQ,MAAMN,OAAS,IAElC,QAAZE,GACAJ,EAAQO,KAAK,CAAEL,OAAQF,EAAQQ,MAAMN,OAAS,KAP7CC,EAWG,kBAAMH,EAAQS,gBCXTC,cACjB,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAnB,KAAAiB,IACVC,EAAAC,OAAAE,EAAA,EAAAF,CAAAnB,KAAAmB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAvB,QACKwB,MAAQ,CACTrB,MAAO,MAHDe,mFAOM,IAAAO,EAAAzB,KAChBU,IAA6BgB,UAAU,SAAAC,GACnCF,EAAKG,SAAS,CAAEzB,MAAOwB,EAAKlB,4CAMhC,OACIf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAACiC,EAAD,CACI1B,MAAOH,KAAKwB,MAAMrB,MAClBD,UAAW,kBAAMQ,EAA4B,QAC7CN,UAAW,kBAAMM,EAA4B,kBAtBlBJ,aCD1BwB,cACjB,SAAAA,IAAc,IAAAZ,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAnB,KAAA8B,IACVZ,EAAAC,OAAAE,EAAA,EAAAF,CAAAnB,KAAAmB,OAAAG,EAAA,EAAAH,CAAAW,GAAAP,KAAAvB,QACKwB,MAAQ,CACTrB,MAAO,MAHDe,mFAQM,IAAAO,EAAAzB,KAChBU,IAA6BgB,UAAU,SAAAC,GAAI,OAAIF,EAAKG,SAAS,CAAEzB,MAAOwB,EAAKlB,4CAI3E,OACIf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,oBAAYI,KAAKwB,MAAMrB,eAjBSG,qBCC1CyB,mLAEE,OACIrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACiC,EAAD,CACI1B,MAAOH,KAAKC,MAAME,MAClBD,UAAWF,KAAKC,MAAMC,UACtBE,UAAWJ,KAAKC,MAAMG,oBARfE,aA0BZ0B,cAVS,SAACR,GAAD,MAAY,CAChCrB,MAAOqB,IAGgB,SAACS,GAAD,MAAe,CACtC/B,UAAW,kBAAM+B,EAAS,CAAEC,KAAM,eAClC9B,UAAW,kBAAM6B,EAAS,CAAEC,KAAM,iBAIvBF,CAA6CD,GC3BtDI,mLAGE,OACIzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,oBAAYI,KAAKC,MAAME,eANXG,aAgBb0B,cAJS,SAACR,GAAD,MAAY,CAChCrB,MAAOqB,IAGIQ,CAAyBG,iDCNxC,IAAMC,EAAQC,YCbgB,WAAuB,IAAtBb,EAAsBc,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAd,EACnC,QADiDA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAClCN,MACX,IAAK,YACD,OAAOV,EAAQ,EACnB,IAAK,YACD,OAAOA,EAAQ,EACnB,QACI,OAAOA,IDMuBiB,OAAOC,8BAAgCD,OAAOC,gCAGnEC,mLAEb,OACIjD,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAUR,MAAOA,GACb1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,WAASC,UAAU,eACfH,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAACiD,EAAD,MACAnD,EAAAC,EAAAC,cAACkD,EAAD,OAGJpD,EAAAC,EAAAC,cAAA,WAASC,UAAU,SACfH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACmD,EAAD,MACArD,EAAAC,EAAAC,cAACoD,EAAD,gBAfc1C","file":"static/js/7.5e528d30.chunk.js","sourcesContent":["import React from 'react';\nimport './Counter.scss';\n\nclass Counter extends React.Component {\n    render() {\n        return (\n            <div className='Counter'>\n                <button name=\"inc\" onClick={this.props.handleInc}>+</button>\n                <h2>{this.props.count}</h2>\n                <button name=\"dec\" onClick={this.props.handleDec}>-</button>\n            </div>\n        )\n    }\n}\n\nexport default (Counter)","import { BehaviorSubject } from 'rxjs';\n\nconst subject = new BehaviorSubject({ number: 10 });\n\nexport const countingService = {\n    sendMessage: message => {\n        console.log(message)\n        if (message === 'inc') {\n            subject.next({ number: subject.value.number + 1 })\n        }\n        if (message === 'dec') {\n            subject.next({ number: subject.value.number - 1 })\n        }\n    },\n    clearMessages: () => subject.next(),\n    getMessage: () => subject.asObservable()\n};\n","import React, { Component } from 'react'\nimport Counter from 'components/Counter/Counter';\nimport { countingService } from 'services/counting.service';\n\nexport default class ObservableCounter extends Component {\n    constructor() {\n        super()\n        this.state = {\n            count: null\n        }\n    }\n\n    componentDidMount() {\n        countingService.getMessage().subscribe(data => {\n            this.setState({ count: data.number })\n        }\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"ObservableCounter\">\n                <h3>Observable Counter</h3>\n                <Counter\n                    count={this.state.count}\n                    handleInc={() => countingService.sendMessage('inc')}\n                    handleDec={() => countingService.sendMessage('dec')}\n                />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { countingService } from 'services/counting.service'\n\nexport default class ObservableListener extends Component {\n    constructor() {\n        super()\n        this.state = {\n            count: null\n        }\n\n    }\n\n    componentDidMount() {\n        countingService.getMessage().subscribe(data => this.setState({ count: data.number }))\n    }\n\n    render() {\n        return (\n            <div className=\"ObservableListener\">\n                <h3>Observable Listener</h3>\n                <h2>Count: {this.state.count}</h2>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Counter from 'components/Counter/Counter'\nimport { connect } from 'react-redux'\n\nclass ReduxCounter extends Component {\n    render() {\n        return (\n            <div className=\"ReduxCounter\">\n                <h3>Redux Counter</h3>\n                <Counter\n                    count={this.props.count}\n                    handleInc={this.props.handleInc}\n                    handleDec={this.props.handleDec}\n                >\n                </Counter>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    count: state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    handleInc: () => dispatch({ type: 'INCREMENT' }),\n    handleDec: () => dispatch({ type: 'DECREMENT' })\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReduxCounter)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\n\nclass ReduxListener extends Component {\n\n    render() {\n        return (\n            <div className=\"ReduxListener\">\n                <h3>Redux Listener</h3>\n                <h2>Count: {this.props.count}</h2>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    count: state\n})\n\nexport default connect(mapStateToProps)(ReduxListener)","import React, { Component } from 'react'\nimport './DataFlow.scss'\n\n// For service with observable\nimport ObservableCounter from './components/ObservableCounter';\nimport ObservableListener from './components/ObservableListener';\n\n// For redux\nimport ReduxCounter from './components/ReduxCounter';\nimport ReduxListener from './components/ReduxListener';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { counterReducer } from 'reducers/counter.reducer'\nconst store = createStore(counterReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nexport default class DataFlow extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <div className=\"page DataFlowPage\">\n                    <h1>Data Flow</h1>\n                    <section className=\"observables\">\n                        <h2>Using a service with observables</h2>\n                        <ObservableCounter></ObservableCounter>\n                        <ObservableListener></ObservableListener>\n                    </section>\n\n                    <section className=\"redux\">\n                        <h2>Using redux</h2>\n                        <ReduxCounter></ReduxCounter>\n                        <ReduxListener></ReduxListener>\n                    </section>\n                </div>\n            </Provider>\n        )\n    }\n}\n","export const counterReducer = (state = 1, action) => {\n    switch (action.type) {\n        case 'INCREMENT':\n            return state + 1\n        case 'DECREMENT':\n            return state - 1\n        default:\n            return state\n    }\n}"],"sourceRoot":""}