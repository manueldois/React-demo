{"version":3,"sources":["routes/ForwardRef/ForwardRef.jsx"],"names":["ForwardRefPage","props","_this","Object","_home_me_Desktop_Node_React_demo_1_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_me_Desktop_Node_React_demo_1_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_me_Desktop_Node_React_demo_1_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","toggleDetailsElement","console","log","detailsElementRef","current","open","React","createRef","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","ref","onClick","Component"],"mappings":"0NAGqBA,sBACjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAIVQ,qBAAuB,WACnBC,QAAQC,IAAIT,EAAKU,mBACjBV,EAAKU,kBAAkBC,QAAQC,MAAQZ,EAAKU,kBAAkBC,QAAQC,MALtEZ,EAAKU,kBAAoBG,IAAMC,YAFhBd,wEAaf,OACIe,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,WAASE,IAAKhB,KAAKO,mBACfK,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,oOAEJF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQG,QAASjB,KAAKI,sBAAtB,kCAtB4BM,IAAMQ","file":"static/js/10.62dae56a.chunk.js","sourcesContent":["import React from 'react'\nimport './ForwardRef.scss'\n\nexport default class ForwardRefPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.detailsElementRef = React.createRef();\n    }\n\n    toggleDetailsElement = () => {\n        console.log(this.detailsElementRef)\n        this.detailsElementRef.current.open = !this.detailsElementRef.current.open\n    }\n\n    render() {\n        // Use the `ref` callback to store a reference to the text input DOM\n        // element in an instance field (for example, this.textInput).\n        return (\n            <div className=\"page ForwardRefPage\">\n                <h1>ForwardRefPage</h1>\n                <details ref={this.detailsElementRef}>\n                    <summary>Details Element</summary>\n                    <p>The HTML Details Element (&lt;details&gt;) creates a disclosure widget in which information is visible only when the widget is toggled into an \"open\" state. A summary or label can be provided using the &lt;summary&gt; element.</p>\n                </details>\n                <br/>\n                <button onClick={this.toggleDetailsElement}>Toggle Details Element</button>\n            </div>\n        );\n    }\n}"],"sourceRoot":""}